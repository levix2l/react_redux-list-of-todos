{"version":3,"sources":["store/actions.ts","store/index.ts","store/selectors.ts","api/todos.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","LOAD_USER","SET_USER_ID","setUserId","payload","type","initialState","todos","user","userId","store","createStore","state","action","getTodosSelector","getUserSelector","getUserId","URL","getAllTodos","a","fetch","response","json","getUserById","id","TodoList","useState","query","setQuery","filterBy","setFilterBy","dispatch","useDispatch","useSelector","useEffect","loadTodosFromServer","todosFromServer","visibleTodos","useMemo","filter","todo","title","toLowerCase","includes","completed","className","placeholder","value","onChange","event","target","map","classNames","checked","readOnly","onClick","CurrentUser","loadUserFromServer","userFromServer","name","email","phone","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abbd616c.chunk.js","sourcesContent":["export const LOAD_TODOS = 'LOAD_TODOS';\nexport const LOAD_USER = 'LOAD_USER';\nexport const SET_USER_ID = 'SET_USERID';\n\nexport const loadTodosAction = (payload: Todo[]) => ({\n  type: LOAD_TODOS,\n  payload,\n});\n\nexport const loadUserAction = (payload: User | null) => ({\n  type: LOAD_USER,\n  payload,\n});\n\nexport const setUserId = (payload: number) => ({\n  type: SET_USER_ID,\n  payload,\n});\n","import { createStore } from 'redux';\nimport { LOAD_TODOS, LOAD_USER, SET_USER_ID } from './actions';\n\nconst initialState: State = {\n  todos: [],\n  user: null,\n  userId: 0,\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case SET_USER_ID:\n      return {\n        ...state,\n        userId: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","export const getTodosSelector = (state: State) => state.todos;\nexport const getUserSelector = (state: State) => state.user;\nexport const getUserId = (state: State) => state.userId;\n","const URL = 'https://mate.academy/students-api';\n\nexport async function getAllTodos(): Promise<Todo[]> {\n  const response = await fetch(`${URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUserById(id: number): Promise<User> {\n  const response = await fetch(`${URL}/users/${id}`);\n\n  return response.json();\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\nimport { getAllTodos } from '../../api/todos';\nimport { loadTodosAction, setUserId } from '../../store/actions';\nimport { getTodosSelector } from '../../store/selectors';\n\nexport const TodoList: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('all');\n\n  const dispatch = useDispatch();\n\n  const todos = useSelector(getTodosSelector);\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getAllTodos();\n\n      dispatch(loadTodosAction(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  const getFilteredTodos = useMemo(() => {\n    return todos.filter(todo => todo.title.toLowerCase().includes(query));\n  }, [todos, query]);\n\n  let visibleTodos = getFilteredTodos;\n\n  visibleTodos = visibleTodos.filter(todo => {\n    switch (filterBy) {\n      case 'all':\n        return todo;\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return 0;\n    }\n  });\n\n  return (\n    <div className=\"TodoList\">\n      <h2 className=\"subtitle pb-2\">Todos:</h2>\n      <div className=\"control pb-2\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Search by title\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n      </div>\n\n      <div className=\"select is-info\">\n        <select\n          value={filterBy}\n          onChange={(event) => setFilterBy(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </div>\n\n      <div className=\"TodoList__list-container pt-2\">\n        <ul className=\"TodoList__list\">\n          {visibleTodos.map((todo) => (\n            <li\n              key={todo.id}\n              className={classNames(\n                'TodoList__item',\n                {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                },\n              )}\n            >\n              <input type=\"checkbox\" checked={todo.completed} readOnly />\n              <p>{todo.title}</p>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  button\n                  TodoList__user-button--selected\n                \"\n                type=\"button\"\n                onClick={() => dispatch(setUserId(+todo.userId))}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport './CurrentUser.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserId, getUserSelector } from '../../store/selectors';\nimport { getUserById } from '../../api/todos';\nimport { loadUserAction, setUserId } from '../../store/actions';\n\nexport const CurrentUser: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const userId = useSelector(getUserId);\n\n  useEffect(() => {\n    const loadUserFromServer = async () => {\n      const userFromServer = await getUserById(userId);\n\n      dispatch(loadUserAction(userFromServer));\n    };\n\n    loadUserFromServer();\n  }, [userId]);\n\n  const user = useSelector(getUserSelector);\n\n  return (\n    <div className=\"CurrentUser box\">\n      {user && (\n        <>\n          <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user.id}`}</span></h2>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone pb-2\">{user.phone}</p>\n        </>\n      )}\n\n      <button\n        className=\"button is-danger\"\n        type=\"button\"\n        onClick={() => dispatch(setUserId(0))}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","// import React from 'react';\n// import { useSelector } from 'react-redux';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nimport { useSelector } from 'react-redux';\nimport { getUserId } from './store/selectors';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App = () => {\n  const userId = useSelector(getUserId);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {userId\n            ? <CurrentUser />\n            : <p>No user selected</p>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}